[{"E:\\Projects\\divineRoll\\client\\src\\App.js":"1","E:\\Projects\\divineRoll\\client\\src\\reportWebVitals.js":"2","E:\\projects\\divineRoll\\client\\src\\reportWebVitals.js":"3","E:\\projects\\divineRoll\\client\\src\\App.js":"4","E:\\projects\\divineRoll\\client\\src\\config\\config.js":"5","E:\\projects\\divineRoll\\client\\src\\game\\game.jsx":"6","E:\\projects\\divineRoll\\client\\src\\components\\dice\\dice.jsx":"7","E:\\projects\\divineRoll\\client\\src\\utils\\randomNumber.js":"8","E:\\projects\\divineRoll\\client\\src\\config\\stableStates.js":"9","E:\\projects\\divineRoll\\client\\src\\config\\diceStates.js":"10","E:\\projects\\divineRoll\\client\\src\\config\\socket.js":"11","E:\\projects\\divineROll\\client\\src\\index.js":"12","E:\\projects\\divineROll\\client\\src\\game\\game.jsx":"13","E:\\projects\\divineROll\\client\\src\\config\\config.js":"14","E:\\projects\\divineROll\\client\\src\\config\\socket.js":"15","E:\\projects\\divineROll\\client\\src\\components\\dice\\dice.jsx":"16","E:\\projects\\divineROll\\client\\src\\utils\\randomNumber.js":"17","E:\\Projects\\divineRoll\\client\\src\\game\\game.jsx":"18","E:\\Projects\\divineRoll\\client\\src\\config\\config.js":"19","E:\\Projects\\divineRoll\\client\\src\\components\\dice\\dice.jsx":"20","E:\\Projects\\divineRoll\\client\\src\\config\\stableStates.js":"21"},{"size":190,"mtime":1606749104874,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"26"},{"size":190,"mtime":1606749104874,"results":"27","hashOfConfig":"26"},{"size":273,"mtime":1606771225458,"results":"28","hashOfConfig":"26"},{"size":1467,"mtime":1606771905670,"results":"29","hashOfConfig":"26"},{"size":7173,"mtime":1606771775863,"results":"30","hashOfConfig":"26"},{"size":131,"mtime":1606757439811,"results":"31","hashOfConfig":"26"},{"size":329,"mtime":1606758209220,"results":"32","hashOfConfig":"26"},{"size":156,"mtime":1606759567576,"results":"33","hashOfConfig":"26"},{"size":57,"mtime":1606771634272,"results":"34","hashOfConfig":"26"},{"size":500,"mtime":499162500000,"results":"35","hashOfConfig":"36"},{"size":1804,"mtime":1606774439426,"results":"37","hashOfConfig":"36"},{"size":273,"mtime":1606771225458,"results":"38","hashOfConfig":"36"},{"size":57,"mtime":1606771634272,"results":"39","hashOfConfig":"36"},{"size":7299,"mtime":1606773325336,"results":"40","hashOfConfig":"36"},{"size":131,"mtime":1606757439811,"results":"41","hashOfConfig":"36"},{"size":2166,"mtime":1606797587605,"results":"42","hashOfConfig":"23"},{"size":273,"mtime":1606771225458,"results":"43","hashOfConfig":"23"},{"size":7261,"mtime":1606797494785,"results":"44","hashOfConfig":"23"},{"size":329,"mtime":1606758209220,"results":"45","hashOfConfig":"23"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"a1j2m",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"109mjjr",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ffu5gm",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Projects\\divineRoll\\client\\src\\App.js",["91"],"E:\\Projects\\divineRoll\\client\\src\\reportWebVitals.js",[],"E:\\projects\\divineRoll\\client\\src\\reportWebVitals.js",[],["92","93"],"E:\\projects\\divineRoll\\client\\src\\App.js",["94"],"E:\\projects\\divineRoll\\client\\src\\config\\config.js",[],"E:\\projects\\divineRoll\\client\\src\\game\\game.jsx",["95"],"import React,{Component} from 'react';\r\n\r\nimport * as PIXI from 'pixi.js';\r\n\r\nimport Dice from '../components/dice/dice.jsx';\r\n\r\nimport io from 'socket.io-client';\r\n\r\n\r\nconst config = require(\"../config/config.js\");\r\nconst socketConfig = require(\"../config/socket.js\");\r\n\r\nclass Game extends Component { \r\n    \r\n    constructor(props){\r\n    \r\n        super(props);\r\n        \r\n        this.pxRender = React.createRef();\r\n        this.app = null;\r\n        this.container = null;\r\n\r\n        this.dice = null;\r\n\r\n        this.controller = null;\r\n\r\n        this.initialize();\r\n    }\r\n\r\n    initialize(){\r\n        this.app = new PIXI.Application(\r\n            {\r\n                width:config.canvas.width,\r\n                height:config.canvas.height,\r\n                backgroundColor:config.canvas.backgroundColor\r\n            }\r\n        )\r\n        \r\n        this.container = new PIXI.Container();\r\n\r\n        this.app.stage.addChild(this.container);\r\n\r\n        this.dice = new Dice(this.app,this.container);\r\n\r\n        this.app.ticker.add(this.updateGame);\r\n        \r\n    }\r\n    \r\n    componentDidMount(){\r\n        \r\n        const socket = io(socketConfig.endPoint);\r\n      \r\n        this.pxRender.current.appendChild(this.app.view);\r\n    }\r\n\r\n    // Main game Loop\r\n    updateGame=()=>{\r\n        if(this.dice==null) return;\r\n\r\n        this.dice.update();\r\n    }\r\n\r\n    render(){\r\n        return <div ref={this.pxRender} id=\"pxRender\"/>\r\n    }\r\n\r\n}\r\n\r\nexport default Game;","E:\\projects\\divineRoll\\client\\src\\components\\dice\\dice.jsx",["96","97"],"E:\\projects\\divineRoll\\client\\src\\utils\\randomNumber.js",[],"E:\\projects\\divineRoll\\client\\src\\config\\stableStates.js",[],"E:\\projects\\divineRoll\\client\\src\\config\\diceStates.js",[],"E:\\projects\\divineRoll\\client\\src\\config\\socket.js",[],"E:\\projects\\divineROll\\client\\src\\index.js",[],"E:\\projects\\divineROll\\client\\src\\game\\game.jsx",[],"E:\\projects\\divineROll\\client\\src\\config\\config.js",[],"E:\\projects\\divineROll\\client\\src\\config\\socket.js",[],"E:\\projects\\divineROll\\client\\src\\components\\dice\\dice.jsx",["98","99"],"\r\nimport * as PIXI from 'pixi.js';\r\n\r\nimport diceSpriteSheet from  \"../../assets/dice.png\";\r\n// import { dice } from '../../config/config.js';\r\n \r\nimport {getRandom} from \"../../utils/randomNumber.js\";\r\n\r\nconst config = require(\"../../config/config.js\");\r\nconst STATES = require(\"../../config/diceStates.js\");\r\nconst DICE = require(\"../../config/stableStates.js\");\r\n\r\n\r\nclass Dice{\r\n\r\n    constructor(app,container,onDiceRolled){\r\n\r\n        this.onDiceRolled = onDiceRolled;\r\n\r\n        this.size ={\r\n            height :config.dice.height,\r\n            width : config.dice.width,\r\n        }\r\n\r\n        this.state = STATES.STABLE;\r\n\r\n        this.speedConst = {\r\n            x:3,\r\n            y:3,\r\n        }\r\n\r\n        this.maxSpeed = {\r\n            x:3,\r\n            y:3,\r\n        }\r\n        \r\n        this.spritePosition = {\r\n            x:0,\r\n            y:0\r\n        }        \r\n\r\n        this.texture = null;\r\n\r\n        this.body = null;\r\n\r\n        this.baseTexture = null;\r\n        this.spriteJson = {};\r\n\r\n        this.app = app;\r\n        this.container = container;\r\n\r\n        this.diceValue = 0;\r\n\r\n        this.initialize();          // initialize dice\r\n    }\r\n\r\n    initialize = () => {\r\n        this.app.loader.add(\"dice\",diceSpriteSheet);\r\n        this.app.loader.load(this.onTextureLoaded);\r\n    }\r\n\r\n    onTextureLoaded = () =>{\r\n        this.createSpriteSheet();           // create sprite sheet\r\n        this.createDice();              // create dice\r\n    }\r\n\r\n    createSpriteSheet = (e) =>{\r\n\r\n        this.baseTexture = new PIXI.BaseTexture.from(this.app.loader.resources[\"dice\"].url);\r\n        this.baseTexture.setSize(736,414) // Original image size\r\n\r\n        // stable faces sprites\r\n        this.spriteJson[\"stable\"]=[\r\n            new PIXI.Texture(this.baseTexture,new PIXI.Rectangle(DICE[\"1\"].x * this.size.width, DICE[\"1\"].y * this.size.height,this.size.width,this.size.height)),\r\n            new PIXI.Texture(this.baseTexture,new PIXI.Rectangle(DICE[\"2\"].x * this.size.width, DICE[\"2\"].y * this.size.height,this.size.width,this.size.height)),\r\n            new PIXI.Texture(this.baseTexture,new PIXI.Rectangle(DICE[\"3\"].x , DICE[\"3\"].y * this.size.height , this.size.width,this.size.height)),\r\n            new PIXI.Texture(this.baseTexture,new PIXI.Rectangle(DICE[\"4\"].x , DICE[\"4\"].y ,this.size.width,this.size.height)),\r\n            new PIXI.Texture(this.baseTexture,new PIXI.Rectangle(DICE[\"5\"].x * this.size.width, DICE[\"5\"].y * this.size.height,this.size.width,this.size.height)),\r\n            new PIXI.Texture(this.baseTexture,new PIXI.Rectangle(DICE[\"6\"].x * this.size.width,DICE[\"6\"].y * this.size.height,this.size.width,this.size.height))\r\n        ]\r\n\r\n    }\r\n\r\n    createDice = () => {\r\n        \r\n        let startFace = getRandom(1,6);        //start with a random face\r\n        this.diceValue = startFace;     // initial dice value\r\n\r\n        this.spritePosition = DICE[startFace.toString()];   // face sprite position in sprite sheet\r\n\r\n\r\n        // initial face\r\n        this.animatedSprite(\r\n            [this.spriteJson[\"stable\"][startFace-1]],\r\n            config.dice.position.x,config.dice.position.y\r\n        ); \r\n        this.body.interactive=true; // make the sprite interactive for registering events\r\n        this.body.on(\"click\",(e)=>{this.handleClick(e)});   // click event listener\r\n    }\r\n    \r\n\r\n    // on Click listener for the dice\r\n    handleClick = (e) => {\r\n\r\n        // check if dice is not already in rolling state\r\n        if( this.state === STATES.ROLLING ) return;\r\n\r\n        this.state = STATES.ROLLING;    // change the state to rolling\r\n\r\n        // this.direction = getRandom(1,4);  // set a random direction to roll\r\n        this.maxSpeed.x = getRandom(-Math.abs(this.speedConst.x),Math.abs(this.speedConst.x));\r\n        this.maxSpeed.y = getRandom(-Math.abs(this.speedConst.y),Math.abs(this.speedConst.y));\r\n\r\n        let spriteAnimations = this.generateSpriteAnimation(this.direction);    // get directional spritesheet frames\r\n        this.body.textures = spriteAnimations;  // set the frames for the dice\r\n        this.body.play(); // play the animation\r\n\r\n    }\r\n\r\n    // move the position of the dice\r\n    positionDice = (x,y) => {\r\n        this.body.x = x;\r\n        this.body.y = y;\r\n    }\r\n\r\n    finishedRolling = () =>{\r\n\r\n        if(this.state===STATES.ROLLING){\r\n            this.state = STATES.STABLE;\r\n            this.onDiceRolled(this.diceValue);\r\n        }\r\n    }\r\n\r\n    generateSpriteAnimation = () =>{\r\n        let frames = [];\r\n\r\n        for (let i = 0 ; i < 30 ;i ++){\r\n            let y = getRandom(1,7);\r\n            let x = getRandom(0,15);\r\n            let texture = new PIXI.Texture(this.baseTexture,new PIXI.Rectangle(x*this.size.width,y* this.size.height,this.size.width,this.size.height));\r\n            frames.push(texture);          \r\n        }   \r\n        let stable = getRandom(0,5);\r\n        frames.push(this.spriteJson[\"stable\"][stable.toString()]);\r\n        this.diceValue = stable+1;\r\n        return frames;\r\n    }\r\n\r\n    getSprite = (x,y) =>{\r\n        x = Math.abs(x) % 15;\r\n        y = Math.abs(y) % 8;\r\n\r\n        if(y==0){\r\n            return new PIXI.Texture(this.baseTexture,new PIXI.Rectangle(0, 0,this.size.width,this.size.height));\r\n        }\r\n        \r\n        if(y==8){\r\n            return new PIXI.Texture(this.baseTexture,new PIXI.Rectangle(0, 8 * this.size.height,this.size.width,this.size.height));\r\n        }\r\n\r\n        let targetSprite = new PIXI.Texture(this.baseTexture,new PIXI.Rectangle(x * this.size.width, y * this.size.height,this.size.width,this.size.height));\r\n        return targetSprite;\r\n    }\r\n    \r\n    stableSprite = (number,x,y) =>{\r\n        this.body = new PIXI.Sprite(this.spriteJson[\"stable\"][number-1]);\r\n        this.body.height = this.size.height;\r\n        this.body.anchor.set(1);\r\n        this.body.width = this.size.width;\r\n        this.positionDice(x,y);\r\n        this.app.stage.addChild(this.body);\r\n    }\r\n\r\n    animatedSprite = (frames,x,y) =>{\r\n        this.body = new PIXI.AnimatedSprite(frames);\r\n        this.body.anchor.set(0.5);\r\n        this.body.animationSpeed = 0.3;\r\n        this.body.loop=false;\r\n        this.body.height = this.size.height;\r\n        this.body.width = this.size.width;\r\n        this.body.onComplete  = (e)=> this.finishedRolling();\r\n        \r\n        this.positionDice(x,y);\r\n\r\n        this.app.stage.addChild(this.body);\r\n        this.body.play();   \r\n    }\r\n\r\n    detectCollision = () => {\r\n        let diceBody = this.body.getBounds();\r\n        if(diceBody.x <= 0 || diceBody.x + diceBody.width >= config.canvas.width){\r\n            this.maxSpeed.x=-this.maxSpeed.x;\r\n        }\r\n        if(diceBody.y <= 0 || diceBody.y + diceBody.height >= config.canvas.height){\r\n            this.maxSpeed.y=-this.maxSpeed.y;\r\n        }\r\n\r\n    }\r\n\r\n    update = () =>{\r\n        if(this.body==null) return;         // ensure the body is not null\r\n        \r\n        if(this.state !== STATES.ROLLING)  return;          // ensure the dice is in not stable state\r\n\r\n        this.detectCollision();\r\n\r\n        let x = this.body.x + this.maxSpeed.x;\r\n        let y = this.body.y + this.maxSpeed.y;\r\n        \r\n        this.positionDice(x,y);         // change the dice position\r\n        \r\n        return;\r\n    }\r\n\r\n}\r\n\r\nexport default Dice;","E:\\projects\\divineROll\\client\\src\\utils\\randomNumber.js",[],"E:\\Projects\\divineRoll\\client\\src\\game\\game.jsx",[],"E:\\Projects\\divineRoll\\client\\src\\config\\config.js",[],"E:\\Projects\\divineRoll\\client\\src\\components\\dice\\dice.jsx",["100","101"],"E:\\Projects\\divineRoll\\client\\src\\config\\stableStates.js",[],{"ruleId":"102","severity":1,"message":"103","line":5,"column":13,"nodeType":"104","messageId":"105","endLine":5,"endColumn":17},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"102","severity":1,"message":"103","line":5,"column":13,"nodeType":"104","messageId":"105","endLine":5,"endColumn":17},{"ruleId":"102","severity":1,"message":"110","line":51,"column":15,"nodeType":"104","messageId":"105","endLine":51,"endColumn":21},{"ruleId":"111","severity":1,"message":"112","line":147,"column":13,"nodeType":"113","messageId":"114","endLine":147,"endColumn":15},{"ruleId":"111","severity":1,"message":"112","line":151,"column":13,"nodeType":"113","messageId":"114","endLine":151,"endColumn":15},{"ruleId":"111","severity":1,"message":"112","line":153,"column":13,"nodeType":"113","messageId":"114","endLine":153,"endColumn":15},{"ruleId":"111","severity":1,"message":"112","line":157,"column":13,"nodeType":"113","messageId":"114","endLine":157,"endColumn":15},{"ruleId":"111","severity":1,"message":"112","line":153,"column":13,"nodeType":"113","messageId":"114","endLine":153,"endColumn":15},{"ruleId":"111","severity":1,"message":"112","line":157,"column":13,"nodeType":"113","messageId":"114","endLine":157,"endColumn":15},"no-unused-vars","'PIXI' is defined but never used.","Identifier","unusedVar","no-native-reassign",["115"],"no-negated-in-lhs",["116"],"'socket' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]